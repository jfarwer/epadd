<%@ page import="edu.stanford.muse.AddressBookManager.AddressBook" %>
<%@ page import="edu.stanford.muse.util.Util" %>
<%@ page import="edu.stanford.muse.webapp.JSPHelper" %>
<%@ page import="java.io.IOException" %>
<%@ page import="edu.stanford.muse.index.Archive" %>
<%@ page import="edu.stanford.muse.index.ArchiveReaderWriter"%>
<%@ page import="edu.stanford.muse.webapp.ModeConfig" %>
<%@ page import="edu.stanford.muse.AddressBookManager.Contact" %>
<%@ page import="java.util.Set" %>

<link rel="stylesheet" href="css/bootstrap-dialog.css">
<script src="js/bootstrap-dialog.js"></script>

<%!
  // this profile block will go onto pretty much every page via the header.jspf

  static void writeProfileBlock(javax.servlet.jsp.JspWriter out1, Archive archive, String pageTitle) {
      writeProfileBlock (out1, false, archive, pageTitle, 1100); // 1100 px is the default width
  }

    static void writeProfileBlock(javax.servlet.jsp.JspWriter out1, boolean offerEditProfilePhotoOption, Archive archive, String pageTitle, int pixelWidth) {
        try {
            AddressBook ab = archive.addressBook;
            String bestName = ab.getBestNameForSelf();
            String archiveID = ArchiveReaderWriter.getArchiveIDForArchive(archive);
            String mode = ModeConfig.getModeForDisplay(archiveID);

            String collectionInfo = "";
            if (!ModeConfig.isAppraisalMode()) {
                collectionInfo = edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.institution")+ (Util.nullOrEmpty(archive.collectionMetadata.institution) ? "Unassigned" : archive.collectionMetadata.institution);
                collectionInfo += "<br/>" + edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.collection-id") + (Util.nullOrEmpty(archive.collectionMetadata.collectionID) ? "Unassigned" : archive.collectionMetadata.collectionID);
            }

            String title = "";
            //If in processing mode, use collection title instead of archiveTitle because archiveTitle can not be changed in the processing mode.
            if(ModeConfig.isAppraisalMode())
                title = Util.nullOrEmpty(archive.archiveTitle) ? "Email Archives of " + bestName : archive.archiveTitle;
            else {
                if(archive.collectionMetadata!=null && !Util.nullOrEmpty(archive.collectionMetadata.collectionTitle)){
                    title =  archive.collectionMetadata.collectionTitle;
                }else
                    title = Util.nullOrEmpty(archive.archiveTitle) ? "Email Archives of " + bestName : archive.archiveTitle;
            }
            String output = "<div style=\"width: " + pixelWidth + "px\" class=\"header-block\">"
                    + "<div class=\"breadcrumbs\">" + mode + " &nbsp;&nbsp;&nbsp;&nbsp;| &nbsp;&nbsp;&nbsp;&nbsp;" + pageTitle + "</div><br/>"
                    + "<div class=\"profile-block\">"
                    + "<div class=\"profile-block-left\">"
                    + "<div class=\"profile-small-img\"  style=\"background-image: url(\'serveImage.jsp?archiveID=" + archiveID + "&file=profilePhoto\')\">";

            // don't allow the option to edit profile photo in discovery or delivery mode
            if (offerEditProfilePhotoOption && !ModeConfig.isDiscoveryMode() && !ModeConfig.isDeliveryMode())
                output += "<div title=\"upload a picture\" class=\"profile-pic-edit\"><img style=\"height:25px\" src=\"images/edit_summary.svg\"/></div>";

            // profile block is broken into left half of 50% and right half of 50%
            int titleWidth = (pixelWidth/2 - 100 - 10 * 2); // -100 for the pic and a further -10px for l/r margin
            int metadataWidth = (pixelWidth/2 - 32 - 20); // -32 for info icon and a further -10 for l/r margin
            output += "</div>" // end profile-small-img
                    + "<div class=\"profile-title\" style=\"width:" + titleWidth + "px;max-width: " + titleWidth + "px\">"
                        + Util.escapeHTML(title)
                    + "</div>"
                    + "</div>" // end profile-block-left
                    + "<div class=\"collection-metadata\" style=\"width: " + metadataWidth + "px;max-width: " + metadataWidth + "px\">" + collectionInfo + "</div>"
                    + "<div class=\"browse-all\" style=\"width:32px\"><img width = 120px title=\"Browse all messages\" src=\"images/all_messages.png\"/> </div>"
                    + "<div class=\"profile-more-info\" style=\"width:32px\"><img title=\"More information about this collection\" src=\"images/information_black.svg\"/> </div>"
                    + "</div></div><br/>";

            out1.println(output);
        } catch (IOException ioe) {
            Util.print_exception(ioe, JSPHelper.log);
        }
    }
%>


<% if (haveArchive) {

    Archive.CollectionMetadata cm = ArchiveReaderWriter.readCollectionMetadata(ArchiveReaderWriter.getArchiveForArchiveID(archiveID).baseDir); %>

<div id="collection-summary-modal" class="info-modal alert modal fade" style="z-index:99999">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"><%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.info-about-archive")%></h4>
            </div>
            <div class="modal-body">
                <% if (!Util.nullOrEmpty(cm.institution)) { %>
                <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.institution")%><br/>
                <b><span class="detail"><%= cm.institution%> </span></b>
                <hr/>
                <% } %>

                <% if (!Util.nullOrEmpty(cm.repository)) { %>
                <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.repository")%><br/>
                <b><span class="detail"><%= cm.repository%> </span></b>
                <hr/>
                <% } %>

                <% if (!Util.nullOrEmpty(cm.collectionID)) { %>
                <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.collection-id")%><br/>
                <b><span class="detail"><%= cm.collectionID%> </span></b>
                <hr/>
                <% } %>

                <% if (!Util.nullOrEmpty(cm.accessionMetadatas)) { %>
                <b><span><%= Util.pluralize(cm.accessionMetadatas.size(), "accession")%></span></b>
                <hr/>
                <% } %>

                <%
                    Set<String> archiveOwnerNames = ArchiveReaderWriter.getArchiveForArchiveID(archiveID).getAddressBook().getOwnNamesSet();
                    Set<String> archiveOwnerEmails =  ArchiveReaderWriter.getArchiveForArchiveID(archiveID).getAddressBook().getOwnAddrs();
                %>
                <% if(archiveOwnerNames.size()!=0){%>
                    <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.archive-owner-name")%>
                <span class="detail"><b><%=archiveOwnerNames.iterator().next()%></b></span><br>
                <%}%>
                <% if(archiveOwnerEmails.size()!=0){%>
                    <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.archive-owner-email")%>
                <span class="detail"><b><%=archiveOwnerEmails.iterator().next()%></b></span><br>
                <%}%>

                <% if (cm.firstDate != null && cm.lastDate != null) { %>
                <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.date-range")%><br/>
                <span class="detail"><b><%=Util.formatDate(cm.firstDate)%></b> <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.to")%> <b><%=Util.formatDate(cm.lastDate)%></b></span>
                <% if (cm.nHackyDates > 0) { %>
                <br/><b><%=Util.pluralize(cm.nHackyDates, "message")%> <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.undated")%></b>
                <hr/>
                <% } %>
                <% } %>
<%
    int sentbyowner = ArchiveReaderWriter.getArchiveForArchiveID(archiveID).getAddressBook().getMsgsSentByOwner();
%>
                <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.messages")%> <span class="detail"><b><%=Util.commatize(cm.nDocs)%></b></span><br/></b>
                <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.sent-by-owner")%> <span class="detail"><b><%=Util.commatize(sentbyowner)%></b></span><br/></b>

            <%-- <% if (cm.nIncomingMessages > 0 || cm.nOutgoingMessages > 0) { %>
                <br/>
                Incoming: <span class="detail"><b><%=Util.commatize(cm.nIncomingMessages)%></b></span><br/>
                Outgoing: <span class="detail"><b><%=Util.commatize(cm.nOutgoingMessages)%></b></span>
                <% } %>
                <hr/>
    --%>        <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.attachments")%> <span class="detail"><b><%=Util.commatize(cm.nBlobs)%></b></span></b>
                <% if (cm.nDocBlobs > 0 || cm.nImageBlobs > 0 || cm.nOtherBlobs > 0) { %>
                <br/>
                <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.images")%> <b><span class="detail"><%=Util.commatize(cm.nImageBlobs)%></span><br/></b>
                <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.documents")%> <b><span class="detail"><%=Util.commatize(cm.nDocBlobs)%></span><br/></b>
                <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.others")%> <b><span class="detail"><%=Util.commatize(cm.nOtherBlobs)%></span></b>
                <% } %>
                </p>


                <% if (!Util.nullOrEmpty(cm.contactEmail)) { /* show contact email, but only if it actually present */ %>
                <hr/>

                <p>
                    <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.contact-email")%><br/>
                    <span class="detail"><%=(Util.nullOrEmpty(cm.contactEmail) ? "Unassigned" : cm.contactEmail)%> </span>
                </p>
                <% }

                    if (ModeConfig.isProcessingMode()) { %>
                <hr/>
                <p>
                    <% if (cm.renamedFiles != 0 || cm.normalizedFiles != 0) {%>
                    <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.preservation-actions")%> <br>
                    <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.renamed-files")%> <span class="detail"><%=Util.commatize(cm.renamedFiles)%></span><br/>
                    <%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.normalized-files")%> <span class="detail"><%=Util.commatize(cm.normalizedFiles)%></span><br/>
                    <%}%>
                </p>
                <br/>
                <% } else if (ModeConfig.isAppraisalMode()) { %>
                    <hr/>
                        Metadata:
                        <a href="edit-metadata?collection=user&archiveID=<%=archiveID%>" style="cursor:pointer;margin-left:75px;"><img style="height:25px" src="images/edit_summary.svg"/></a>
                <% } %>
				
				<button id="btn_delete" class="btn-default" onclick="updateHash(archiveID);" style="float: right;">Update checksum</button>

            </div>
			<hr/>
            <!--div class="modal-footer"-->
			<div class="row">
                <div class="col-sm-5"><button id="btn_delete" class="btn-default" onclick="delArchive(archiveID);">Delete</button></div>
                <!--button type="button" class="ok-button btn btn-default" data-dismiss="modal"> %=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.close")%></button-->
                <div class="col-sm-5"><button type="button" class="ok-button btn btn-default" data-dismiss="modal"><%=edu.stanford.muse.util.Messages.getMessage(archiveID,"messages","profile-block.close")%></button></div>               
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<script>
    // ensure that this func is called only when doc is ready because .profile-more-info doesn't exist yet when this header is included
    $(function() {
        $('.profile-more-info').click (function() { $('#collection-summary-modal').modal();});
        $('.browse-all').click (function() {
            location.href='browse?archiveID=<%=archiveID%>';
        })})

    function delArchive (archive1) {
            <%  String getPath = ArchiveReaderWriter.CACHE_DIR.replaceAll("\\\\","/");  %>
            var folder = "<%=getPath%>";

            $('#collection-summary-modal').modal("hide");
            
            BootstrapDialog.show ({
                title: 'Delete Archive',
                message: 'Confirm to delete this Archive?',
                type: BootstrapDialog.TYPE_DANGER,
                closable: false,
                data: {
                   'folder': folder
                },
                buttons: [
                   {
                    id: 'btn-yes',   
//                  icon: 'glyphicon glyphicon-check',       
                    label: 'Yes',
                    cssClass: 'btn-default', 
                    autospin: false,
                    action: function(dialogRef){    
                        $.ajax({
                            type: "POST",
                            url: "ajax/delFolder",
                            data: { folder: folder, archive: archive1 },
                            success: function(response) {
                               if (response['result'] === "ok") {
                                    BootstrapDialog.alert(
                                        {
                                         message:response['reason'], 
                                         type: BootstrapDialog.TYPE_SUCCESS,
                                         action: function(dialog) {
                                            dialog.close(); 
                                          },
                                          callback: function(result) {
//                                            ('#collection-summary-modal').modal('show');
                                            window.location.href = 'email-sources';
                                          }    
                                        }
                                    );
                                    dialogRef.close();
//                                    window.location.href = 'collections';
//                                    $('#collection-summary-modal').modal('show');
                               } else {
                                    BootstrapDialog.show({message:response['reason'], type: BootstrapDialog.TYPE_WARNING});
                               }
                            },
                            error: function() {
                                    BootstrapDialog.show({message:response['reason'], type: BootstrapDialog.TYPE_WARNING});
                            }
    });
                    }
                  },
                  {
                   id: 'btn-cancel',   
//                 icon: 'glyphicon glyphicon-check',       
                   label: 'No',
                   cssClass: 'btn-default', 
                   autospin: false,
                   action: function(dialogRef){    
                        dialogRef.close();
                        $('#collection-summary-modal').modal('show');
                   }    
                  }
                ]
            });                    
    }    // End of delArchive

    function updateHash (archive1) {
            $('#collection-summary-modal').modal("hide");
            BootstrapDialog.show ({
                title: 'Update Checksum',
                message: 'Confirm to update the checksum?',
                type: BootstrapDialog.TYPE_INFO,
                closable: false,
//                data: {
//                   'folder': folder
//                },
                buttons: [
                   {
                    id: 'btn-yes',   
//                  icon: 'glyphicon glyphicon-check',       
                    label: 'Yes',
                    cssClass: 'btn-default', 
                    autospin: false,
                    action: function(dialogRef){    
                        $.ajax({
                            type: "POST",
                            url: "ajax/hashUpdate",
                            data: { archive: archive1 },
                            success: function(response) {
                               if (response['result'] === "ok") {
                                    BootstrapDialog.alert(
                                        {
                                         message:response['reason'], 
                                         type: BootstrapDialog.TYPE_SUCCESS,
                                         action: function(dialog) {
                                            dialog.close(); 
                                          },
                                          callback: function(result) {
                                            dialogRef.close();
                                            $('#collection-summary-modal').modal('show');
//                                            window.location.href = 'email-sources';
                                          }    
                                        }
                                    );
                                    dialogRef.close();
//                                    window.location.href = 'collections';
//                                    $('#collection-summary-modal').modal('show');
                               } else {
                                    BootstrapDialog.show({message:response['reason'], type: BootstrapDialog.TYPE_WARNING});
                               }
                            },
                            error: function() {
                                    BootstrapDialog.show({message:response['reason'], type: BootstrapDialog.TYPE_WARNING});
                            }
                        });                                
                    }
                  },
                  {
                   id: 'btn-cancel',   
//                 icon: 'glyphicon glyphicon-check',       
                   label: 'No',
                   cssClass: 'btn-default', 
                   autospin: false,
                   action: function(dialogRef){    
                        dialogRef.close();
                        $('#collection-summary-modal').modal('show');
                   }    
                  }
                ]
            });                    
    }    // End of updateHash
	
</script>
<% } %>